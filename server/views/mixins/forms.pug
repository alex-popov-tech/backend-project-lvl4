- const getEntityName = (entity) => entity.constructor.name

mixin flash(messages = [])
  .container.wrapper.flex
    each texts, type in messages
      each text in texts
        div.alert(class=`alert-${type}`)= text

mixin formFor(entity = null)
  form&attributes(attributes)
    block

mixin input(entity, propertyName, errors = {})
  - propertyErrors = errors[propertyName]
  - entityName = getEntityName(entity)
  .form-group
    label(
      for= propertyName
    )= t(`models.${entityName}.${propertyName}`)
    input.form-control(
      id= propertyName
      name= propertyName
      class=(propertyErrors && 'is-invalid')
      value=(entity[propertyName] || '')
    )&attributes(attributes)
    if propertyErrors
      .invalid-feedback=propertyErrors.map(({ message }) => message).join('\n')

mixin select(entity, propertyName, errors= [])
  - propertyErrors = errors[propertyName]
  .form-group
    label(
      for= propertyName
    )= t(`models.${entityName}.${propertyName}`)
    select(
      id= propertyName
      name= propertyName
      class='form-control'
    )&attributes(attributes)
      each option in entity[propertyName]
        option(value=option.id)= option.toString()
    if propertyErrors
      .invalid-feedback=propertyErrors.map(({ message }) => message).join('\n')

mixin multiselect(entity, propertyName, errors= [])
  - propertyErrors = errors[propertyName]
  .form-group
    label(
      for= propertyName
    )= t(`models.${entityName}.${propertyName}`)
    select(
      multiple
      id= propertyName
      name= propertyName
      class='form-control'
    )&attributes(attributes)
      each option in entity[propertyName]
        option(value=option.id)= option.toString()
    if propertyErrors
      .invalid-feedback=propertyErrors.map(({ message }) => message).join('\n')

mixin submit()
  .form-group
    input(class='btn btn-primary' type='submit')&attributes(attributes)

mixin buttonTo(action, method)
  form(action=`${action}?_method=${method}`, method="post")
    input(type='submit')&attributes(attributes)
